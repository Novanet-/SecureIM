<Window x:Class="SecureIM.ChatGUI.view.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:SecureIM.ChatGUI.Converters"
        xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
        xmlns:ctConv="clr-namespace:ChromeTabs.Converters;assembly=ChromeTabs"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:SecureIM.ChatGUI"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tabClasses="clr-namespace:SecureIM.ChatGUI.ViewModel.TabClasses"
        xmlns:userControls="clr-namespace:SecureIM.ChatGUI.UserControls"
        xmlns:viewModel="clr-namespace:SecureIM.ChatGUI.ViewModel"
        xmlns:vm="clr-namespace:SecureIM.ChatGUI.ViewModel"
        x:Name="window"
        Title="ChromeTabs SecureIM.ChatGUI"
        Width="700"
        Height="600"
        Background="WhiteSmoke"
        DataContext="{Binding Source={StaticResource Locator},
                              Path=ViewModelMainWindow}"
        mc:Ignorable="d">
    <!--  These DataTemplates load the correct user control based on the viewmodel  -->
    <Window.Resources>
        <converters:TabToTabSnapConverter x:Key="TabToTabSnapConverter" />
        <DataTemplate DataType="{x:Type tabClasses:TabClass1}">
            <userControls:UserControl1 />
        </DataTemplate>
        <DataTemplate DataType="{x:Type tabClasses:TabClass2}">
            <userControls:UserControl2 />
        </DataTemplate>
        <DataTemplate DataType="{x:Type tabClasses:TabClass3}">
            <userControls:UserControl3 />
        </DataTemplate>
        <DataTemplate DataType="{x:Type tabClasses:TabChatWindow}">
            <userControls:ChatWindowControl />
        </DataTemplate>
        <DataTemplate DataType="{x:Type tabClasses:TabChatMain}">
            <userControls:ChatMainControl />
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <!--  The tab control with with tab tearing support.  -->
        <ct:ChromeTabControl x:Name="MyChromeTabControl"
                             d:DataContext="{d:DesignInstance viewModel:ViewModelMainWindow}"
                             AddTabButtonBehavior="OpenNewTab"
                             AddTabCommand="{Binding AddTabCommand}"
                             Background="AliceBlue"
                             CanMoveTabs="{Binding CanMoveTabs}"
                             CloseTabCommand="{Binding CloseTabCommand}"
                             CloseTabWhenDraggedOutsideBonds="{Binding SelectedTab,
                                                                       Converter={StaticResource TabToTabSnapConverter}}"
                             DragWindowWithOneTab="True"
                             IsAddButtonVisible="{Binding ShowAddButton}"
                             ItemsSource="{Binding ItemCollection}"
                             MaximumTabWidth="200"
                             PinTabCommand="{Binding PinTabCommand}"
                             ReorderTabsCommand="{Binding ReorderTabsCommand}"
                             SelectedItem="{Binding SelectedTab}"
                             SelectedTabBrush="WhiteSmoke"
                             TabDraggedOutsideBonds="ChromeTabControl_TabDraggedOutsideBonds"
                             TabPersistBehavior="All"
                             TabTearTriggerDistance="10">
            <!--  We override the control template here to show how you can modify the properties of tab panel and content presenter  -->
            <ct:ChromeTabControl.Template>
                <ControlTemplate TargetType="{x:Type ct:ChromeTabControl}">
                    <ControlTemplate.Resources>
                        <ctConv:TabPersistBehaviorToContentPresenterVisibilityConverter x:Key="TabPersistBehaviorToContentPresenterVisibilityConverter" />
                        <ctConv:TabPersistBehaviorToItemHolderVisibilityConverter x:Key="TabPersistBehaviorToItemHolderVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#FF999999"
                                BorderThickness="0,0,0,1"
                                Padding="10,5,10,0">
                            <ct:ChromeTabPanel Background="{TemplateBinding Background}" IsItemsHost="True" />
                        </Border>

                        <Grid Grid.Row="1" Visibility="{TemplateBinding TabPersistBehavior, Converter={StaticResource TabPersistBehaviorToContentPresenterVisibilityConverter}}">
                            <ContentPresenter Content="{TemplateBinding SelectedContent}" />
                        </Grid>
                        <Grid x:Name="PART_ItemsHolder"
                              Grid.Row="1"
                              Visibility="{TemplateBinding TabPersistBehavior,
                                                           Converter={StaticResource TabPersistBehaviorToItemHolderVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </ct:ChromeTabControl.Template>
            <!--
                We must override the item template to show our tab name in the header. Here we use a simple
                textblock, but you could put any combination of controls here. Uncomment the orange border to show
                the bounds of the header content presenter
            -->
            <ct:ChromeTabControl.ItemTemplate>
                <DataTemplate>
                    <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">
                        <!--</Border>-->

                        <!--  We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.  -->
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand,
                                                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                          Header="Close" />
                                <MenuItem Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand,
                                                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandTarget="{Binding Mode=OneWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                          Header="Close all" />
                                <MenuItem Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand,
                                                            RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding}"
                                          CommandTarget="{Binding Mode=OneWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                          Header="Close other tabs" />
                            </ContextMenu>
                        </Grid.ContextMenu>

                        <!--<Border BorderBrush="Orange"
                                BorderThickness="1">-->
                        <StackPanel Background="Transparent" Orientation="Horizontal">
                            <Image Margin="5,5,5,5"
                                   Source="{Binding TabIcon}"
                                   Stretch="Fill" />
                            <TextBlock VerticalAlignment="Center"
                                       Text="{Binding TabName}"
                                       TextTrimming="CharacterEllipsis"
                                       TextWrapping="NoWrap" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ct:ChromeTabControl.ItemTemplate>
        </ct:ChromeTabControl>
        <StackPanel Grid.Row="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
            <Button x:Name="Button"
                    Width="75"
                    Margin="5"
                    HorizontalAlignment="Left"
                    d:DataContext="{d:DesignInstance viewModel:ViewModelExampleBase}"
                    Command="{Binding AddTabCommand}"
                    Content="Add Tab" />
            <CheckBox Margin="5"
                      VerticalAlignment="Center"
                      d:DataContext="{d:DesignInstance viewModel:ViewModelExampleBase}"
                      Content="Can add tabs"
                      IsChecked="{Binding CanAddTabs,
                                          Mode=TwoWay}" />
            <CheckBox Margin="5"
                      VerticalAlignment="Center"
                      Content="Show add button"
                      IsChecked="{Binding ShowAddButton}" />
            <CheckBox Margin="5"
                      VerticalAlignment="Center"
                      Content="Movable tabs"
                      IsChecked="{Binding CanMoveTabs}" />
        </StackPanel>
        <StackPanel Grid.Row="1"
                    HorizontalAlignment="Left"
                    Orientation="Horizontal">
            <Button x:Name="BnOpenPinnedTabExample"
                    Grid.Row="1"
                    Margin="5"
                    HorizontalAlignment="Left"
                    Click="BnOpenPinnedTabExample_Click"
                    Content="Pinned tab example" />
            <Button x:Name="BnOpenCustomStyleExample"
                    Grid.Row="1"
                    Margin="5"
                    HorizontalAlignment="Left"
                    Click="BnOpenCustomStyleExample_Click"
                    Content="Custom style example" />
        </StackPanel>
    </Grid>
</Window>