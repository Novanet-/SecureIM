<Window
    x:Class="SecureIM.ChatGUI.view.alternativeViews.PinnedTabExampleWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:SecureIM.ChatGUI.Converters"
    xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:SecureIM.ChatGUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tabClasses="clr-namespace:SecureIM.ChatGUI.ViewModel.TabClasses"
    xmlns:userControls="clr-namespace:SecureIM.ChatGUI.UserControls"
    xmlns:viewModel="clr-namespace:SecureIM.ChatGUI.ViewModel"
    xmlns:vm="clr-namespace:SecureIM.ChatGUI.ViewModel"
    Title="SecureIM"
    Width="700"
    Height="600"
    MinWidth="730"
    MinHeight="630"
    DataContext="{Binding Source={StaticResource Locator}, Path=ViewModelPinnedTabExampleWindow}"
    SizeToContent="WidthAndHeight"
    mc:Ignorable="d">
    <!--  This example shows how you implement pinned tab functionality  -->
    <Window.Resources>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converters:BooleanToPinTabTextConverter x:Key="BooleanToPinTabTextConverter" />
        <DataTemplate DataType="{x:Type tabClasses:TabClass1}">
            <userControls:UserControl1 />
        </DataTemplate>
        <DataTemplate DataType="{x:Type tabClasses:TabClass2}">
            <userControls:UserControl2 />
        </DataTemplate>
        <DataTemplate DataType="{x:Type tabClasses:TabClass3}">
            <userControls:UserControl3 />
        </DataTemplate>
        <DataTemplate DataType="{x:Type tabClasses:TabChatWindow}">
            <userControls:ChatWindowControl />
        </DataTemplate>
        <DataTemplate DataType="{x:Type tabClasses:TabChatMain}">
            <userControls:ChatMainControl />
        </DataTemplate>

    </Window.Resources>
    <Grid>
        <ct:ChromeTabControl
            x:Name="MyChromeTabControlWithPinnedTabs"
            MinWidth="700"
            MinHeight="600"
            d:DataContext="{Binding Source={StaticResource Locator}, Path=ViewModelPinnedTabExampleWindow}"
            AddTabCommand="{Binding AddChatTabCommand}"
            Background="AliceBlue"
            CloseTabCommand="{Binding CloseTabCommand}"
            ContainerItemPreparedForOverride="TabControl_ContainerItemPreparedForOverride"
            ItemsSource="{Binding ItemCollection}"
            MaximumTabWidth="250"
            MinimumTabWidth="40"
            PinTabCommand="{Binding PinTabCommand}"
            PinnedTabWidth="50"
            ReorderTabsCommand="{Binding ReorderTabsCommand}"
            SelectedItem="{Binding SelectedTab}">
            <!--  We override the control template here to show how you can modify the properties of tab panel and content presenter  -->
            <ct:ChromeTabControl.Template>
                <ControlTemplate TargetType="{x:Type ct:ChromeTabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            Grid.Row="0"
                            Padding="10,5,10,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="#FF999999"
                            BorderThickness="0,0,0,1">
                            <ct:ChromeTabPanel Background="{TemplateBinding Background}" IsItemsHost="True" />
                        </Border>
                        <Grid Grid.Row="1">
                            <Border Background="WhiteSmoke">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}" />
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </ct:ChromeTabControl.Template>
            <!--
                We must override the item template to show our tab name in the header. Here we use a simple
                textblock, but you could put any combination of controls here. Uncomment the orange border to show
                the bounds of the header content presenter
            -->
            <ct:ChromeTabControl.ItemTemplate>
                <DataTemplate>
                    <Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">
                        <!--</Border>-->

                        <!--  We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.  -->
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem
                                    Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Header="Close" />
                                <MenuItem
                                    Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Header="Close all" />
                                <MenuItem
                                    Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    CommandParameter="{Binding}"
                                    CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Header="Close other tabs" />
                                <Separator />
                                <MenuItem
                                    Command="{Binding Path=PlacementTarget.Tag.PinTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                    CommandParameter="{Binding}"
                                    CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Header="{Binding IsPinned, Converter={StaticResource BooleanToPinTabTextConverter}}" />
                            </ContextMenu>
                        </Grid.ContextMenu>

                        <!--<Border BorderBrush="Orange"
                                BorderThickness="1">-->
                        <StackPanel Background="Transparent" Orientation="Horizontal">
                            <Image
                                Margin="5"
                                Source="{Binding TabIcon}"
                                Stretch="Fill" />
                            <TextBlock
                                VerticalAlignment="Center"
                                Text="{Binding TabName}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap"
                                Visibility="{Binding IsPinned, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ct:ChromeTabControl.ItemTemplate>
        </ct:ChromeTabControl>
    </Grid>
</Window>